import{_ as t,C as i,c as r,o as s,a,q as o,b as n,m as c}from"./chunks/framework.B2ptOLFE.js";const d="/assets/architecture.Dt_2ORq3.jpg",x=JSON.parse('{"title":"框架介绍","description":"","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"summary","link":"#summary","children":[]},{"level":2,"title":"架构","slug":"architecture","link":"#architecture","children":[]},{"level":2,"title":"优势","slug":"advantages","link":"#advantages","children":[]},{"level":2,"title":"功能","slug":"features","link":"#features","children":[]}],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),u={name:"guide/index.md"};function h(m,e,p,g,f,k){const l=i("TextAd");return s(),r("div",null,[e[0]||(e[0]=a("h1",{id:"introduction",tabindex:"-1"},[c("框架介绍 "),a("a",{class:"header-anchor",href:"#introduction","aria-label":'Permalink to "框架介绍 {#introduction}"'},"​")],-1)),o(l),e[1]||(e[1]=n('<h2 id="summary" tabindex="-1">简介 <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;简介 {#summary}&quot;">​</a></h2><p>due是一款基于Go语言开发的高性能分布式游戏服务器框架。其中，模块设计方面借鉴了<a href="https://github.com/go-kratos/kratos" target="_blank" rel="noreferrer">kratos</a>的模块设计思路，旨在为游戏服务器开发提供完整、高效、标准化的解决方案。</p><h2 id="architecture" tabindex="-1">架构 <a class="header-anchor" href="#architecture" aria-label="Permalink to &quot;架构 {#architecture}&quot;">​</a></h2><p><img src="'+d+'" alt="架构图"></p><ul><li>Gate：网关服。主要用于客户端连接管理，接收并转发客户端消息到后端Node节点服。同时接收来自Node节点服和Mesh网格服的推送消息并转发至对应的客户端。</li><li>Node：节点服。主要用于接收和处理经过Gate网关服转发过来的客户端消息，并将处理后的结果通过Gate网关服转发至对应的客户端。同时Node节点服也可以通过注册RPC调用函数来扩展Node节点服的额外能力。</li><li>Mesh: 网格服。主要用于构建无状态的微服务以提供给Node服务器调用。</li></ul><h2 id="advantages" tabindex="-1">优势 <a class="header-anchor" href="#advantages" aria-label="Permalink to &quot;优势 {#advantages}&quot;">​</a></h2><ul><li>免费性：框架遵循MIT协议，完全开源免费。</li><li>简单性：架构简单，源码简洁易理解。</li><li>便捷性：仅暴露必要的调用接口，减轻开发者的心智负担。</li><li>高性能：框架原生实现集群通信方案，普通机器单线程也能轻松实现20W的TPS。</li><li>高效性：框架原生提供tcp、kcp、ws等协议的服务器，方便开发者快速构建各种类型的网关服务器。</li><li>扩展性：采用良好的接口设计，方便开发者设计实现自有功能。</li><li>平滑性：引入信号量，通过控制服务注册中心来实现优雅地重启。</li><li>扩容性：通过优雅的路由分发机制，理论上可实现无限扩容。</li><li>易调试：框架原生提供了tcp、kcp、ws等协议的客户端，方便开发者进行独立的调试全流程调试。</li><li>可管理：提供完善的后台管理接口，方便开发者快速实现自定义的后台管理功能。</li></ul><h2 id="features" tabindex="-1">功能 <a class="header-anchor" href="#features" aria-label="Permalink to &quot;功能 {#features}&quot;">​</a></h2><ul><li>网关：支持tcp、kcp、ws等协议的网关服务器。</li><li>日志：支持std、zap、logrus、aliyun、tencent等多种日志组件。</li><li>注册：支持consul、etcd、nacos等多种服务注册中心。</li><li>协议：支持json、protobuf、msgpack等多种通信协议。</li><li>配置：支持consul、etcd、nacos等多种配置中心；并支持json、yaml、toml、xml等多种文件格式。</li><li>通信：支持grpc、rpcx等多种高性能通信方案。</li><li>重启：支持服务器的平滑重启。</li><li>事件：支持redis、nats、kafka、rabbitMQ等事件总线实现方案。</li><li>加密：支持rsa、ecc等多种加密方案。</li><li>服务：支持grpc、rpcx等多种微服务解决方案。</li><li>灵活：支持单体、分布式等多种架构方案。</li><li>模型：支持单线程、多协程、Actor三种模型的灵活切换。</li><li>管理：提供master后台管理服相关接口支持。</li><li>工具：提供<a href="https://github.com/dobyte/due-cli" target="_blank" rel="noreferrer">due-cli</a>脚手架工具箱，可快速构建集群项目。</li><li>Web：提供http协议的fiber服务器及swagger文档解决方案。</li></ul>',9))])}const _=t(u,[["render",h]]);export{x as __pageData,_ as default};
