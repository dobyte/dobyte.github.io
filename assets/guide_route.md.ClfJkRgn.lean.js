import{_ as l,C as e,c as d,o as B,a as t,q as a,b as i,e as n,m as A,w as s,U as F}from"./chunks/framework.B2ptOLFE.js";const u="/assets/route-stateless-dispatch.CP3xxskH.png",p="/assets/route-stateful-forward.Czq0evtX.png",b=JSON.parse('{"title":"路由设计","description":"","frontmatter":{},"headers":[{"level":2,"title":"路由注册","slug":"route-register","link":"#route-register","children":[]},{"level":2,"title":"路由状态","slug":"route-state","link":"#route-state","children":[]},{"level":2,"title":"无状态路由分发","slug":"route-stateless-dispatch","link":"#route-stateless-dispatch","children":[]},{"level":2,"title":"有状态路由定向转发","slug":"route-stateful-forward","link":"#route-stateful-forward","children":[]},{"level":2,"title":"消息流转","slug":"消息流转","link":"#消息流转","children":[]}],"relativePath":"guide/route.md","filePath":"guide/route.md"}'),c={name:"guide/route.md"};function C(h,E,m,f,N,D){const o=e("TextAd"),r=e("Mermaid");return B(),d("div",null,[E[1]||(E[1]=t("h1",{id:"route",tabindex:"-1"},[A("路由设计 "),t("a",{class:"header-anchor",href:"#route","aria-label":'Permalink to "路由设计 {#route}"'},"​")],-1)),a(o),E[2]||(E[2]=i(`<h2 id="route-register" tabindex="-1">路由注册 <a class="header-anchor" href="#route-register" aria-label="Permalink to &quot;路由注册 {#route-register}&quot;">​</a></h2><p>在游戏服务器中，路由（route）作为消息（message）的标识，为消息在整个业务系统中的流转提供支撑。在<a href="https://github.com/dobyte/due" target="_blank" rel="noreferrer">due</a>框架中，路由处理器会被提前添加到节点服（node）上，在节点服启动的时候随着节点服信息一同被注入到注册中心中。集群中的其他服务器会通过服务发现（discovery）获取到这一节点服（node）的相关信息。</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// AddRouteHandler 添加路由处理器</span></span>
<span class="line"><span style="color:#B392F0;">AddRouteHandler</span><span style="color:#E1E4E8;">(route </span><span style="color:#F97583;">int32</span><span style="color:#E1E4E8;">, stateful </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;">, handler RouteHandler, middlewares </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">MiddlewareHandler)</span></span></code></pre></div><h2 id="route-state" tabindex="-1">路由状态 <a class="header-anchor" href="#route-state" aria-label="Permalink to &quot;路由状态 {#route-state}&quot;">​</a></h2><p>在<a href="https://github.com/dobyte/due" target="_blank" rel="noreferrer">due</a>框架中，路由被设计成了无状态（stateless）和有状态（stateful）两种模式。两种路由模式分别对应着分布式集群中不同的路由分发机制。但无论是哪种路由模式，一个路由号只能对应一种路由模式。</p><ul><li><p>无状态路由（stateless route）：无状态路由与HTTP路由比较类似。当网关（Gate）接收到无状态路由消息后会根据一定的<a href="/guide/route.html#route-stateless-dispatch">分发策略</a>分发到对应的节点（Node）进行消息处理。</p></li><li><p>有状态路由（stateful route）：有状态路由主要解决的是游戏业务中的消息定向转发问题。</p></li></ul><h2 id="route-stateless-dispatch" tabindex="-1">无状态路由分发 <a class="header-anchor" href="#route-stateless-dispatch" aria-label="Permalink to &quot;无状态路由分发 {#route-stateless-dispatch}&quot;">​</a></h2><p><img src="`+u+'" alt="无状态路由分发"></p><ul><li>随机（random）：默认策略，网关（Gate）在接收到无状态路由消息后会在已注册该路由号的节点（Node）中随机选择一个节点（Node）进行消息转发。</li><li>轮询（rr）：网关（Gate）在接收到无状态路由消息后会在已注册该路由号的节点（Node）中按照顺序依次转发到对应的节点（Node）。</li><li>加权轮询（wrr）：网关（Gate）在接收到无状态路由消息后会在已注册该路由号的节点（Node）中按照节点（Node）权重高低依次转发到对应的节点（Node）。</li></ul><h2 id="route-stateful-forward" tabindex="-1">有状态路由定向转发 <a class="header-anchor" href="#route-stateful-forward" aria-label="Permalink to &quot;有状态路由定向转发 {#route-stateful-forward}&quot;">​</a></h2><p><img src="'+p+'" alt="有状态路由定向转发"></p><p>有状态路由要实现定向转发须满足以下两个条件：</p><ul><li>用户已与他所连接的网关（Gate）建立了绑定关系</li><li>用户已与某一个节点（Node）建立了绑定关系</li></ul><p>在满足以上两个条件后，用户客户端后续发送的有状态路由消息均会被转发到用户绑定的节点（Node）上。</p><h2 id="消息流转" tabindex="-1">消息流转 <a class="header-anchor" href="#消息流转" aria-label="Permalink to &quot;消息流转&quot;">​</a></h2><p>以下用一个简单的流程图来模拟玩家从建立连接到发起登录、再到加入战斗、最后到攻击怪物的整个消息流转过程。</p>',16)),(B(),n(F,null,{default:s(()=>[a(r,{id:"mermaid-81",class:"mermaid my-class",graph:"sequenceDiagram%0Aparticipant%20Client%20as%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%88Client%EF%BC%89%0Aparticipant%20Gate%20as%20%E7%BD%91%E5%85%B3%E9%9B%86%E7%BE%A4%EF%BC%88Gate%EF%BC%89%0Aparticipant%20Node%20as%20%E8%8A%82%E7%82%B9%E9%9B%86%E7%BE%A4%EF%BC%88Node%EF%BC%89%0A%0AClient%20-%3E%3E%20Gate%3A%20%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5%0AGate%20--%3E%20Client%3A%20%E8%BF%9E%E6%8E%A5%E5%BB%BA%E7%AB%8B%E6%88%90%E5%8A%9F%0AClient%20-%3E%3E%20Gate%3A%20%E5%8F%91%E9%80%81%E8%B7%AF%E7%94%B1%E5%8F%B7%E4%B8%BAN%EF%BC%88%E6%97%A0%E7%8A%B6%E6%80%81%EF%BC%89%E7%9A%84%E7%99%BB%E5%BD%95%E6%B6%88%E6%81%AF%0AGate%20-%3E%3E%20Node%3A%20%E6%A0%B9%E6%8D%AE%E5%88%86%E5%8F%91%E7%AD%96%E7%95%A5%E5%B0%86%E8%B7%AF%E7%94%B1%E6%B6%88%E6%81%AF%E5%88%86%E5%8F%91%E5%88%B0%E6%B3%A8%E5%86%8C%E4%BA%86%E8%AF%A5%E8%B7%AF%E7%94%B1%E5%8F%B7N%E7%9A%84%E8%8A%82%E7%82%B9%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%0ANode%20-%3E%3E%20Node%3A%20%E8%A7%A3%E6%9E%90%E7%99%BB%E5%BD%95%E6%B6%88%E6%81%AF%EF%BC%8C%E5%AE%8C%E6%88%90%E7%99%BB%E5%BD%95%E9%80%BB%E8%BE%91%0ANode%20-%3E%3E%20Gate%3A%20%E8%B0%83%E7%94%A8BindGate%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%B0%86%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BD%91%E5%85%B3%E8%BF%9E%E6%8E%A5%E8%BF%9B%E8%A1%8C%E7%BB%91%E5%AE%9A%0AGate%20-%3E%3E%20Node%3A%20%E7%BB%91%E5%AE%9A%E7%BD%91%E5%85%B3%E8%BF%9E%E6%8E%A5%E6%88%90%E5%8A%9F%0ANode%20-%3E%3E%20Gate%3A%20%E8%B0%83%E7%94%A8Push%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%B0%86%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E5%88%B0%E7%BD%91%E5%85%B3%0AGate%20-%3E%3E%20Client%3A%20%E6%A0%B9%E6%8D%AEPush%E5%91%BD%E4%BB%A4%E5%8F%82%E6%95%B0%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E8%BF%9E%E6%8E%A5%EF%BC%8C%E5%B0%86%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E6%B6%88%E6%81%AF%E4%B8%8B%E5%8F%91%E5%88%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%0A%0AClient%20-%3E%3E%20Gate%3A%20%E5%8F%91%E9%80%81%E8%B7%AF%E7%94%B1%E5%8F%B7%E4%B8%BAM%EF%BC%88%E6%97%A0%E7%8A%B6%E6%80%81%EF%BC%89%E7%9A%84%E5%8A%A0%E5%85%A5%E6%B8%B8%E6%88%8F%E6%B6%88%E6%81%AF%0AGate%20-%3E%3E%20Node%3A%20%E6%A0%B9%E6%8D%AE%E5%88%86%E5%8F%91%E7%AD%96%E7%95%A5%E5%B0%86%E8%B7%AF%E7%94%B1%E6%B6%88%E6%81%AF%E5%88%86%E5%8F%91%E5%88%B0%E6%B3%A8%E5%86%8C%E4%BA%86%E8%AF%A5%E8%B7%AF%E7%94%B1%E5%8F%B7M%E7%9A%84%E8%8A%82%E7%82%B9%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%0ANode%20-%3E%3E%20Node%3A%20%E8%A7%A3%E6%9E%90%E5%8A%A0%E5%85%A5%E6%B8%B8%E6%88%8F%E6%B6%88%E6%81%AF%EF%BC%8C%E5%AE%8C%E6%88%90%E8%BF%9B%E5%85%A5%E6%B8%B8%E6%88%8F%E9%80%BB%E8%BE%91%0ANode%20-%3E%3E%20Node%3A%20%E8%B0%83%E7%94%A8BindNode%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%B0%86%E7%94%A8%E6%88%B7%E4%B8%8E%E5%BD%93%E5%89%8D%E8%8A%82%E7%82%B9%E8%BF%9B%E8%A1%8C%E7%BB%91%E5%AE%9A%0ANode%20-%3E%3E%20Gate%3A%20%E8%B0%83%E7%94%A8Push%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%B0%86%E5%8A%A0%E5%85%A5%E6%B8%B8%E6%88%8F%E6%88%90%E5%8A%9F%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E5%88%B0%E7%BD%91%E5%85%B3%0AGate%20-%3E%3E%20Client%3A%20%E6%A0%B9%E6%8D%AEPush%E5%91%BD%E4%BB%A4%E5%8F%82%E6%95%B0%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E8%BF%9E%E6%8E%A5%EF%BC%8C%E5%B0%86%E5%8A%A0%E5%85%A5%E6%B8%B8%E6%88%8F%E6%88%90%E5%8A%9F%E6%B6%88%E6%81%AF%E4%B8%8B%E5%8F%91%E5%88%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%0AClient%20-%3E%3E%20Gate%3A%20%E5%8F%91%E9%80%81%E8%B7%AF%E7%94%B1%E5%8F%B7%E4%B8%BAX%EF%BC%88%E6%9C%89%E7%8A%B6%E6%80%81%EF%BC%89%E7%9A%84%E6%94%BB%E5%87%BB%E6%B6%88%E6%81%AF%0AGate%20-%3E%3E%20Node%3A%20%E5%B0%86%E6%94%BB%E5%87%BB%E6%B6%88%E6%81%AF%E8%BD%AC%E5%8F%91%E5%88%B0%E7%94%A8%E6%88%B7%E7%BB%91%E5%AE%9A%E5%A5%BD%E7%9A%84%E5%B9%B6%E4%B8%94%E5%B7%B2%E6%B3%A8%E5%86%8C%E4%BA%86%E8%B7%AF%E7%94%B1%E5%8F%B7%E4%B8%BAX%EF%BC%88%E6%9C%89%E7%8A%B6%E6%80%81%EF%BC%89%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%8A%0ANode%20-%3E%3E%20Node%3A%20%E8%A7%A3%E6%9E%90%E6%94%BB%E5%87%BB%E6%B6%88%E6%81%AF%EF%BC%8C%E5%AE%8C%E6%88%90%E6%94%BB%E5%87%BB%E9%80%BB%E8%BE%91%0ANode%20-%3E%3E%20Gate%3A%20%E8%B0%83%E7%94%A8Push%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%B0%86%E6%94%BB%E5%87%BB%E6%88%90%E5%8A%9F%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E5%88%B0%E7%BD%91%E5%85%B3%0AGate%20-%3E%3E%20Client%3A%20%E6%A0%B9%E6%8D%AEPush%E5%91%BD%E4%BB%A4%E5%8F%82%E6%95%B0%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E8%BF%9E%E6%8E%A5%EF%BC%8C%E5%B0%86%E6%94%BB%E5%87%BB%E6%88%90%E5%8A%9F%E6%B6%88%E6%81%AF%E4%B8%8B%E5%8F%91%E5%88%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%0A"})]),fallback:s(()=>E[0]||(E[0]=[A(" Loading... ")])),_:1}))])}const G=l(c,[["render",C]]);export{b as __pageData,G as default};
