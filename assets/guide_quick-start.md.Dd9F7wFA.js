import{_ as o,C as e,c as n,o as t,a,q as p,b as r,m as c}from"./chunks/framework.B2ptOLFE.js";const B=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[{"level":2,"title":"Go编译器安装","slug":"go编译器安装","link":"#go编译器安装","children":[]},{"level":2,"title":"工具链安装","slug":"工具链安装","link":"#工具链安装","children":[]},{"level":2,"title":"编写网关服务器","slug":"编写网关服务器","link":"#编写网关服务器","children":[]},{"level":2,"title":"编写节点服务器","slug":"编写节点服务器","link":"#编写节点服务器","children":[]},{"level":2,"title":"编写测试客户端","slug":"编写测试客户端","link":"#编写测试客户端","children":[]}],"relativePath":"guide/quick-start.md","filePath":"guide/quick-start.md"}'),i={name:"guide/quick-start.md"};function d(g,s,u,h,F,y){const l=e("TextAd");return t(),n("div",null,[s[0]||(s[0]=a("h1",{id:"quick-start",tabindex:"-1"},[c("快速开始 "),a("a",{class:"header-anchor",href:"#quick-start","aria-label":'Permalink to "快速开始 {#quick-start}"'},"​")],-1)),p(l),s[1]||(s[1]=r(`<h2 id="go编译器安装" tabindex="-1">Go编译器安装 <a class="header-anchor" href="#go编译器安装" aria-label="Permalink to &quot;Go编译器安装&quot;">​</a></h2><ol><li><p>安装Go多版本管理器（推荐）</p><ul><li>Linux/macOS下自动安装Go多版本管理器（适用于 bash、zsh）</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;"> curl</span><span style="color:#79B8FF;"> -sSL</span><span style="color:#9ECBFF;"> https://raw.githubusercontent.com/voidint/g/master/install.sh</span><span style="color:#F97583;"> |</span><span style="color:#B392F0;"> bash</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;"> cat</span><span style="color:#F97583;"> &lt;&lt;</span><span style="color:#9ECBFF;"> &#39;EOF&#39;</span><span style="color:#F97583;"> &gt;&gt;</span><span style="color:#9ECBFF;"> ~/.bashrc</span></span>
<span class="line"><span style="color:#9ECBFF;"># 可选。检查g别名是否被占用</span></span>
<span class="line"><span style="color:#9ECBFF;">if [[ -n $(alias g 2&gt;/dev/null) ]]; then</span></span>
<span class="line"><span style="color:#9ECBFF;">    unalias g</span></span>
<span class="line"><span style="color:#9ECBFF;">fi</span></span>
<span class="line"><span style="color:#9ECBFF;">EOF</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;"> source</span><span style="color:#9ECBFF;"> &quot;</span><span style="color:#E1E4E8;">$HOME</span><span style="color:#9ECBFF;">/.g/env&quot;</span></span></code></pre></div><ul><li>Windows下自动安装Go多版本管理器（适用于 pwsh）</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;"> iwr</span><span style="color:#9ECBFF;"> https://raw.githubusercontent.com/voidint/g/master/install.ps1</span><span style="color:#79B8FF;"> -useb</span><span style="color:#F97583;"> |</span><span style="color:#B392F0;"> iex</span></span></code></pre></div></li><li><p>安装Go编译器</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;"> g</span><span style="color:#9ECBFF;"> install</span><span style="color:#79B8FF;"> 1.22.9</span></span></code></pre></div></li></ol><h2 id="工具链安装" tabindex="-1">工具链安装 <a class="header-anchor" href="#工具链安装" aria-label="Permalink to &quot;工具链安装&quot;">​</a></h2><ol><li><p>安装protobuf编译器（使用场景：开发mesh微服务、使用protobuf作为与客户端通信的协议）</p><ul><li>Linux, using apt or apt-get, for example:</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;"> apt</span><span style="color:#9ECBFF;"> install</span><span style="color:#79B8FF;"> -y</span><span style="color:#9ECBFF;"> protobuf-compiler</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;"> protoc</span><span style="color:#79B8FF;"> --version</span><span style="color:#6A737D;">  # Ensure compiler version is 3+</span></span></code></pre></div><ul><li>MacOS, using Homebrew:</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;"> brew</span><span style="color:#9ECBFF;"> install</span><span style="color:#9ECBFF;"> protobuf</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;"> protoc</span><span style="color:#79B8FF;"> --version</span><span style="color:#6A737D;">  # Ensure compiler version is 3+</span></span></code></pre></div><ul><li>Windows, download from <a href="https://github.com/protocolbuffers/protobuf/releases" target="_blank" rel="noreferrer">Github</a>:</li></ul></li><li><p>安装protobuf go代码生成工具（使用场景：开发mesh微服务、使用protobuf作为与客户端通信的协议）</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">go</span><span style="color:#9ECBFF;"> install</span><span style="color:#9ECBFF;"> google.golang.org/protobuf/cmd/protoc-gen-go@latest</span></span></code></pre></div></li><li><p>安装grpc代码生成工具（使用场景：使用<a href="https://grpc.io/" target="_blank" rel="noreferrer">GRPC</a>组件开发mesh微服务）</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">go</span><span style="color:#9ECBFF;"> install</span><span style="color:#9ECBFF;"> google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest</span></span></code></pre></div></li><li><p>安装rpcx代码生成工具（使用场景：使用<a href="https://rpcx.io/" target="_blank" rel="noreferrer">RPCX</a>组件开发mesh微服务）</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">go</span><span style="color:#9ECBFF;"> install</span><span style="color:#9ECBFF;"> github.com/rpcxio/protoc-gen-rpcx@latest</span></span></code></pre></div></li><li><p>安装gorm dao代码生成工具（使用场景：使用<a href="https://gorm.io/" target="_blank" rel="noreferrer">GORM</a>作为数据库orm）</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">go</span><span style="color:#9ECBFF;"> install</span><span style="color:#9ECBFF;"> github.com/dobyte/gorm-dao-generator@latest</span></span></code></pre></div></li><li><p>安装mongo dao代码生成工具（使用场景：使用<a href="https://github.com/mongodb/mongo-go-driver" target="_blank" rel="noreferrer">MongoDB</a>作为数据库orm）</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">go</span><span style="color:#9ECBFF;"> install</span><span style="color:#9ECBFF;"> github.com/dobyte/mongo-dao-generator@latest</span></span></code></pre></div></li></ol><h2 id="编写网关服务器" tabindex="-1">编写网关服务器 <a class="header-anchor" href="#编写网关服务器" aria-label="Permalink to &quot;编写网关服务器&quot;">​</a></h2><h2 id="编写节点服务器" tabindex="-1">编写节点服务器 <a class="header-anchor" href="#编写节点服务器" aria-label="Permalink to &quot;编写节点服务器&quot;">​</a></h2><h2 id="编写测试客户端" tabindex="-1">编写测试客户端 <a class="header-anchor" href="#编写测试客户端" aria-label="Permalink to &quot;编写测试客户端&quot;">​</a></h2>`,7))])}const C=o(i,[["render",d]]);export{B as __pageData,C as default};
